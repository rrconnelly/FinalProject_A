aes(x = povlevel) +
geom_bar("#1C7D1C") +
labs(
x = "Relation to Federal Poverty Level",
y = "Number of Children",
title = "Poverty Level") +
theme_minimal()
esquisser(viewer = "pane")
ggplot(childhealthdata) +
aes(x = povlevel) +
geom_bar(fill = "#112446") +
labs(
x = "Poverty Level",
y = "Number of Children",
title = "Poverty Levels"
) +
theme_minimal()
ggplot(childhealthdata) +
aes(x = povlevel) +
geom_bar(fill = "#1C7D1C") +
labs(
x = "Relation to Federal Poverty Level",
y = "Number of Children",
title = "Poverty Level") +
theme_minimal()
childhealthdata <- childhealthdata %>% mutate(povlevel = recode_factor(povlev4_1920,
"1" = "Below 100% FPL",
"2" = "100-199% FPL",
"3" = "200-399% FPL",
"4" = "Greater than 400% FPL",
.ordered = TRUE,
.default = "Unknown"))
povplot <- ggplot(childhealthdata) +
aes(x = povlevel) +
geom_bar(fill = "#1C7D1C") +
labs(
x = "Relation to Federal Poverty Level",
y = "Number of Children",
title = "Poverty Level") +
theme_minimal()
povplot
ggplotly(povplot) %>%
layout(title = list(text = paste0('Poverty Levels',
'<br>',
'<sup>',
'Povery of children sampled',
'</sup>')),
annotations =
list(x = 1, y = -0.1, text = "Data Source: National Survey of Children's Health, 2019-2020",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=10, color="black")))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
# Chunk 1: setup
library(flexdashboard)
library(tidyverse)
library(dplyr)
library(DataExplorer)
library(ggplot2)
library(plotly)
library(shiny)
library(devtools)
library(waffle)
library(rsconnect)
# read in data
childhealthdata <- read_csv("FinalDataforSubmission.csv")
#("C:/Users/rebec/Documents/GitHub/FinalProject_A/2019-2020 National Survey of Children's Health (NSCH)/FinalDataforSubmission.csv")
#adding filtered variables
NewJersey <- childhealthdata %>%
filter(State.FIPS.Code == "34")
Poor <- childhealthdata %>%
filter(povlevel == "Less than 200% FPL")
MissedNeededCare <- childhealthdata %>%
filter(ForegoneCare == "Yes")
parentEmoSup <- childhealthdata %>%
filter(SomeoneEmoSup == 1)
yesbehaviorprobsALL <- childhealthdata %>%
filter(behavior_1920 == "Yes")
White <- childhealthdata %>%
filter(RaceCat == "White")
Black <- childhealthdata %>%
filter(RaceCat == "Black")
Asian <- childhealthdata %>%
filter(RaceCat == "Asian")
Hispanic <- childhealthdata %>%
filter(RaceCat == "Hispanic")
OtherRace <- childhealthdata %>%
filter(RaceCat == "Other")
uninsured <- childhealthdata %>%
filter(InsGap_1920 == "Periods Uninsured")
childhealthdata <- childhealthdata %>% mutate(AceCount = recode_factor(ACEct_1920,
"0" = "0",
"1" = "1",
"2" = "2",
"3" = "3",
"4" = "4",
"5" = "5",
"6" = "6",
"7" = "7",
"8" = "8",
"9" = "9",
"10" = "10",
"99" = "Missing",
.ordered = TRUE,
.default = "Unknown"))
childhealthdata <- childhealthdata %>% mutate(povlevel = recode_factor(povlev4_1920,
"1" = "Below 100% FPL",
"2" = "100-199% FPL",
"3" = "200-399% FPL",
"4" = "Greater than 400% FPL",
.ordered = TRUE,
.default = "Unknown"))
# Chunk 2: race
#race
RaceCount <- childhealthdata %>%
group_by(RaceCat) %>%
count() %>% arrange(desc(n)) %>%
rename("children" = n)
#RaceWaffle <- c("Black" = 6.86, "Asian" = 39.20, "White" = 52.68, "Hispanic" = 559, "Other" = 5.04)
RaceWaffle2 <- c("Black" = 1.37, "Asian" = 7.84, "White" = 11, "Hispanic" = 112, "Other" = 1)
#RaceWafflePlot <- waffle(RaceWaffle, rows = 25,
#legend_pos = "bottom")
RaceWafflePlot2 <- waffle(RaceWaffle2, rows = 11,
legend_pos = "bottom")
RaceWafflePlot2
# Chunk 3
RaceCount %>% knitr::kable()
# Chunk 4: insurance pie chart
InsStatus <- childhealthdata %>%
group_by(InsGap_1920) %>%
count() %>% arrange(desc(n)) %>%
rename("children" = n)
InsStatus$percentage <- InsStatus$children/sum(InsStatus$children)*100
InsStatus$Round_off <- round(InsStatus$percentage)
InsPieChart <- InsStatus %>%
filter(!(InsGap_1920 %in% "Unknown")) %>%
ggplot() +
aes(x = "", y = children, fill = InsGap_1920) +
geom_col(color = "black") +
geom_label(aes(label = paste0(Round_off, "%")),
color = "black",
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "Insurance Coverage Status")) +
scale_fill_brewer() +
theme_void()
InsPieChart
# Chunk 5: child age
childhealthdata <- childhealthdata %>% rename(Age = Child.Age)
ageplot <- ggplot(childhealthdata) +
aes(x = Age) +
geom_histogram(bins = 35L, fill = "#1C7D1C") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Ages of Children",
subtitle = "Age Distribution of Child of Interest, with an over sampling of
children with disabilities and children ages 0-5",
caption = "Data Source: National Survey of Children's Health, 2019-2020"
) +
coord_flip() +
theme_minimal()
ggplotly(ageplot) %>%
layout(title = list(text = paste0('Ages of Children',
'<br>',
'<sup>',
'Age distribution of children sampled, with an over sampling of children with disabilities and children ages 0-5',
'</sup>')),
annotations =
list(x = 1, y = -0.1, text = "Data Source: National Survey of Children's Health, 2019-2020",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=10, color="black")))
#^source for caption in plotly code = https://stackoverflow.com/questions/45103559/plotly-adding-a-source-or-caption-to-a-chart
#soure code for title in plotly - https://datascott.com/blog/subtitles-with-ggplotly/
# Chunk 6: poverty level chart
povplot <- ggplot(childhealthdata) +
aes(x = povlevel) +
geom_bar(fill = "#1C7D1C") +
labs(
x = "Relation to Federal Poverty Level",
y = "Number of Children",
title = "Poverty Level") +
theme_minimal()
#making it in plotly
ggplotly(povplot) %>%
layout(title = list(text = paste0('Poverty Levels',
'<br>',
'<sup>',
'Povery of children sampled',
'</sup>')),
annotations =
list(x = 1, y = -0.1, text = "Data Source: National Survey of Children's Health, 2019-2020",
showarrow = F, xref='paper', yref='paper',
xanchor='right', yanchor='auto', xshift=0, yshift=0,
font=list(size=10, color="black")))
# Chunk 7: value boxes
valueBox("6.15%", caption = "Percent Uninsured", icon = NULL, color = NULL, href = NULL)
#valueBox("6.15%", caption = 28.71, "Percent in Poverty", icon = NULL, color = #NULL, href = NULL)
# Chunk 8: care insurance
#insured status by received care
CareInsChart <- childhealthdata %>%
filter(!(InsGap_1920 %in% "Unknown")) %>%
filter(!(ForegoneCare %in% "Unknown")) %>%
ggplot() +
aes(x = ForegoneCare, fill = InsGap_1920) +
geom_bar(position = "fill") +
scale_fill_viridis_d(option = "viridis", direction = 1) +
labs(x = "Whether Child Missed out on Needed Care",
y = "Proportion of Children", title = "Children Receiving Necessary Care by Insurance Status", caption = "Based on National Survey of Children's Health, 2019-2020",
fill = "Insured Status") +
theme_minimal()
ggplotly(CareInsChart)
# Chunk 9: reasons care not received
# Chunk 10
#tbd insurance by race
# Chunk 11: care poverty
CarePovChart <- childhealthdata %>%
filter(!(ForegoneCare %in% "Unknown")) %>%
ggplot() +
aes(x = ForegoneCare, fill = povlevel) +
geom_bar(position = "fill") +
scale_fill_viridis_d(option = "cividis",
direction = 1) +
labs(x = "Missed Out on Needed Care", y = "Proportion of Children", title = "Children Who Did Not Receive Needed Care by Poverty Level",
caption = "Based on National Survey of Children's Health, 2019-2020", fill = "Poverty Level") +
theme_minimal()
ggplotly(CarePovChart)
# Chunk 12: ACEs and Race
ACEandRACE <- childhealthdata %>%
filter(!(RaceCat %in% "Unknown")) %>%
filter(!(AceCount %in% "Missing")) %>%
ggplot() +
aes(x = RaceCat, fill = AceCount) +
geom_bar(position = "fill") +
coord_flip() +
scale_fill_viridis_d(option = "viridis",
direction = 1) +
labs(x = "Race", y = "Proportion of Children", title = "Adverse Childhood Experiences (ACE) by Race in the US",
caption = "Based on National Survey of Children's Health, 2019-2020", fill = "Number of ACEs") +
theme_minimal()
ggplotly(ACEandRACE)
# Chunk 13: ACE and Flourish
FlrshAcePlot <- childhealthdata %>%
filter(!(FlourishStatus6to17 %in% "Unknown")) %>%
filter(!(FlourishStatus6to17 %in% "NA, Under 5")) %>%
filter(!(AceCount %in% "Missing")) %>%
filter(!(AceCount %in% "Unknown")) %>%
ggplot() +
aes(x = FlourishStatus6to17, fill = AceCount) +
geom_bar(position = "fill") +
coord_flip() +
scale_fill_viridis_d(option = "viridis",
direction = 1) +
labs(x = "Flourishing Items Met", y = "Proportion of Children", title = "Flourishing Status & Adverse Childhood Experiences (ACE)",
subtitle = "Count of Children in the US Meeting Flourishing Criteria by Number of Adverse Childhood Experiences",
caption = "Based on National Survey of Children's Health, 2019-2020", fill = "Number of ACEs") +
theme_minimal()
ggplotly(FlrshAcePlot)
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
RaceCount
ggplot(RaceCount, aes(fill = RaceCat, values = children)) +
geom_waffle(n_rows = 10, size = 0.33, colour = "white") +
coord_equal() +
theme_void()
library(waffle)
ggplot(RaceCount, aes(fill = RaceCat, values = children)) +
geom_waffle(n_rows = 10, size = 0.33, colour = "white") +
coord_equal() +
theme_void()
library(hrbrthemes)
library(waffle)
library(ggplot2)
library(dplyr)
library(waffle)
library(ggplot2)
library(dplyr)
devtools::install_github("liamgilbey/ggwaffle")
ggplot(RaceCount, aes(fill = RaceCat, values = children)) +
geom_waffle(n_rows = 10, size = 0.33, colour = "white") +
coord_equal() +
theme_void()
library(ggwaffle)
install.packages(ggwaffle)
install.packages("ggwaffle")
ggplot(RaceCount, aes(fill = RaceCat, values = children)) +
geom_waffle(n_rows = 10, size = 0.33, colour = "white") +
coord_equal() +
theme_void()
waffle_data <- waffle_iron(mpg, aes_d(group = class))
library(flexdashboard)
library(tidyverse)
library(dplyr)
library(DataExplorer)
library(ggplot2)
library(plotly)
library(shiny)
library(devtools)
library(waffle)
library(ggwaffle)
library(rsconnect)
waffle_data <- waffle_iron(mpg, aes_d(group = class))
remove.packages(waffle)
remove.packages("waffle", lib="~/R/win-library/4.1")
devtools::install_github("hrbrmstr/waffle")
ggplot(RaceCount, aes(fill = RaceCat, values = children)) +
geom_waffle(n_rows = 10, size = 0.33, colour = "white") +
coord_equal() +
theme_void()
RaceWafflePlot2
remove.packages(waffle)
remove.packages("waffle")
detach("package:waffle", unload = TRUE)
remove_packages("hrbrmstr/waffle")
remove_package("hrbrmstr/waffle")
remove.packages("hrbrmstr/waffle")
detach("hrbrmstr/waffle", unload = TRUE)
devtools::install_github("hrbrmstr/waffle")
ggplot(RaceCount, aes(fill = RaceCat, values = children)) +
geom_waffle(n_rows = 10, size = 0.33, colour = "white") +
coord_equal() +
theme_void()
library(waffle)
library("waffle")
library("ggwaffle")
install.packages("waffle", repos = "https://cinc.rud.is")
library("waffle")
library(waffle)
devtools::install_github("liamgilbey/ggwaffle")
library(ggwaffle)
install.packages(waffle)
install.packages("waffle")
install.packages("ggwaffle")
library(waffle)
library(ggwaffle)
library(ggwaffle)
ggplot(RaceCount, aes(fill = RaceCat, values = children)) +
geom_waffle(n_rows = 10, size = 0.33, colour = "white") +
coord_equal() +
theme_void()
# install.packages("waffle", repos = "https://cinc.rud.is")
library(waffle)
ggplot(RaceCount, aes(fill = RaceCat, values = children)) +
geom_waffle(n_rows = 10, size = 0.33, colour = "white") +
coord_equal() +
theme_void()
RaceWafflePlot3 <- waffle(RaceWaffle2, rows = 11,
legend_pos = "bottom")
rm(RaceWafflePlot3)
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
RaceCount
RaceWaffle2 <- c("Black: 686" = 1.37, "Asian: 3,920" = 7.84, "White: 5,268" = 11, "Hispanic: 55,895" = 112, "Other 504" = 1)
waffle(RaceWaffle2, rows = 11,)
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
InsStatus %>%
filter(!(InsGap_1920 %in% "Unknown")) %>%
ggplot() +
aes(x = "", y = children, fill = InsGap_1920) +
geom_col(color = "black") +
geom_label(aes(label = paste0(Round_off, "%")),
color = "black",
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "Insurance Coverage Status")) +
scale_fill_brewer() +
theme_void()
InsStatus %>%
filter(!(InsGap_1920 %in% "Unknown")) %>%
ggplot() +
aes(x = "", y = children, fill = InsGap_1920) +
geom_col(color = "black") +
geom_label(aes(label = paste0(Round_off, "%")),
color = "black",
size = 16,
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "Insurance Coverage Status")) +
scale_fill_brewer() +
theme_void()
InsStatus %>%
filter(!(InsGap_1920 %in% "Unknown")) %>%
ggplot() +
aes(x = "", y = children, fill = InsGap_1920) +
geom_col(color = "black") +
geom_label(aes(label = paste0(Round_off, "%")),
color = "black",
size = 16,
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "Insurance Coverage Status", size = 16)) +
scale_fill_brewer() +
theme_void()
InsStatus %>%
filter(!(InsGap_1920 %in% "Unknown")) %>%
ggplot() +
aes(x = "", y = children, fill = InsGap_1920) +
geom_col(color = "black") +
geom_label(aes(label = paste0(Round_off, "%")),
color = "black",
size = 16,
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "Insurance Coverage Status"), size = 16) +
scale_fill_brewer() +
theme_void()
InsStatus %>%
filter(!(InsGap_1920 %in% "Unknown")) %>%
ggplot() +
aes(x = "", y = children, fill = InsGap_1920) +
theme(legend.key.size = unit(1, 'cm'), #change legend key size
legend.title = element_text(size=30), #change legend title font size
legend.text = element_text(size=30)) #change legend text font size
geom_col(color = "black") +
geom_label(aes(label = paste0(Round_off, "%")),
color = "black",
size = 16,
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "Insurance Coverage Status")) +
scale_fill_brewer() +
theme_void()
InsStatus %>%
filter(!(InsGap_1920 %in% "Unknown")) %>%
ggplot() +
aes(x = "", y = children, fill = InsGap_1920) +
theme(legend.key.size = unit(1, 'cm'),
legend.title = element_text(size=30),
legend.text = element_text(size=30)) +
geom_col(color = "black") +
geom_label(aes(label = paste0(Round_off, "%")),
color = "black",
size = 16,
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "Insurance Coverage Status")) +
scale_fill_brewer() +
theme_void()
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
InsStatus %>%
filter(!(InsGap_1920 %in% "Unknown")) %>%
ggplot() +
aes(x = "", y = children, fill = InsGap_1920) +
theme(legend.key.size = unit(3, 'cm'),
legend.title = element_text(size=40),
legend.text = element_text(size=40)) +
geom_col(color = "black") +
geom_label(aes(label = paste0(Round_off, "%")),
color = "black",
size = 12,
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "Insurance Coverage Status")) +
scale_fill_brewer() +
theme_void()
InsStatus %>%
filter(!(InsGap_1920 %in% "Unknown")) %>%
ggplot() +
aes(x = "", y = children, fill = InsGap_1920) +
theme(legend.key.size = unit(3, 'cm'),
legend.title = element_text(size=40),
legend.text = element_text(size=40)) +
geom_col(color = "black") +
geom_label(aes(label = paste0(Round_off, "%")),
color = "black",
position = position_stack(vjust = 0.5),
show.legend = FALSE) +
coord_polar(theta = "y") +
guides(fill = guide_legend(title = "Insurance Coverage Status")) +
scale_fill_brewer() +
theme_void()
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
MissedNeededCare %>% count()
childhealthdata %>% group_by(ForegoneCare) %>% count()
View(childhealthdata)
childhealthdata %>% group_by(NeededHlthcrNotReceived) %>% count()
childhealthdata %>% group_by(ForegoneCare_1920) %>% count()
childhealthdata %>% group_by(ForgoneCare_1920) %>% count()
reasonsnocare <- c("ineligible_1920", "unavailable_1920", "appointment_1920", "transport_1920", "NotOpen_1920", "CostIssue_1920", "MedBills_1920")
reasonnocare$childhealthdata <- childhealthdata[myvars
]
reasonnocare$childhealthdata <- childhealthdata[reasonsnocare]
reasonsnocaredata <- childhealthdata[reasonsnocare]
reasonsnocaredata
View(reasonsnocaredata)
numineligible <- childhealthdata %>% filter(ineligible_1920 == 1)
View(numineligible)
rm(numineligible)
reasonsnocaredata %>% filter(ineligible_1920 == 1, unavailable_1920 == 1, appointment_1920 == 1, transport_1920 == 1, NotOpen_1920 == 1, CostIssue_1920 == 1,MedBills_1920 == 1)
View(reasonsnocaredata)
reasonsnocareFiltered <- reasonsnocaredata %>% filter(ineligible_1920 == 1, unavailable_1920 == 1, appointment_1920 == 1, transport_1920 == 1, NotOpen_1920 == 1, CostIssue_1920 == 1,MedBills_1920 == 1)
View(reasonsnocareFiltered)
rm(reasonsnocareFiltered)
childhealthdata %>% count(unavailable_1920 == 1)
childhealthdata %>% filter(ineligible_1920 == 1)
childhealthdata %>% filter(unavailable_1920 == 1) %>%
)
childhealthdata %>% filter(unavailable_1920 == 1) %>% count()
