library(ggplot2)
library(plotly)
library(shiny)
library(waffle)
library(rsconnect)
library(scales)
library(packcircles)
library(treemapify)
# read in data
childhealthdata <- read_csv("FinalDataforSubmission.csv")
#adding filtered variables
MissedNeededCare <- childhealthdata %>%
filter(ForegoneCare == "Yes")
uninsured <- childhealthdata %>%
filter(InsGap_1920 == "Periods Uninsured")
childhealthdata <- childhealthdata %>% mutate(ACEs = recode_factor(ACEct_1920,
"0" = "0",
"1" = "1",
"2" = "2",
"3" = "3",
"4" = "4",
"5" = "5",
"6" = "6",
"7" = "7",
"8" = "8",
"9" = "9",
"10" = "10",
"99" = "Missing",
.ordered = TRUE,
.default = "Unknown"))
childhealthdata <- childhealthdata %>% mutate(povlevel = recode_factor(povlev4_1920,
"1" = "Below 100% FPL",
"2" = "100-199% FPL",
"3" = "200-399% FPL",
"4" = "Greater than 400% FPL",
.ordered = TRUE,
.default = "Unknown"))
childhealthdata <- childhealthdata %>% mutate(RaceCat = recode_factor(Race,
"1" = "Hispanic",
"2" = "White",
"4" = "Asian",
"3" = "Black",
"5" = "Other",
"99" = "Unknown",
.ordered = TRUE,
.default = "Unknown"))
childhealthdata <- childhealthdata %>% filter(!(FlourishStatus6to17 %in% "Unknown")) %>%
filter(!(FlourishStatus6to17 %in% "NA, Under 5")) %>%
filter(!(ACEs %in% "Missing")) %>%
filter(!(ACEs %in% "Unknown")) %>%
# Chunk 2: race
#race
RaceCount <- childhealthdata %>%
group_by(RaceCat) %>%
count() %>% arrange(desc(n)) %>%
rename("children" = n)
RaceCount <- RaceCount %>% filter(!(RaceCat %in% "Unknown"))
# race tree map
RaceTreeMap <- ggplot(RaceCount, aes(area = children, fill = RaceCat, label = RaceCat)) +
geom_treemap() +
scale_fill_viridis_d(option = "viridis",
direction = 1) +
geom_treemap_text(fontface = "italic", colour = "white", place = "centre", min.size = 2, grow = TRUE)
RaceTreeMap
# Chunk 3: insurance pie chart
InsStatus <- childhealthdata %>%
group_by(InsGap_1920) %>%
count() %>% arrange(desc(n)) %>%
rename("children" = n)
InsStatus <- InsStatus %>% filter(InsGap_1920 != "Unknown")
InsStatus$percentage <- InsStatus$children/sum(InsStatus$children)*100
InsStatus$Round_off <- round(InsStatus$percentage)
#in plotly
piecolors <- c('rgb(68, 1, 84)', 'rgb(253, 231, 37)')
InsurancePieChart <- plot_ly(InsStatus, labels = ~InsGap_1920, values = ~children, type = 'pie',
textposition = 'outside',
textinfo = 'percent',
insidetextfont = list(color = '#FFFFFF'),
hoverinfo = 'text',
text = paste("Children: ", InsStatus$children),
marker = list(colors = piecolors),
line = list(color = '#FFFFFF', width = 1),
showlegend = TRUE)
InsurancePieChart <- InsurancePieChart %>% layout(title = 'Insurance Coverage',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
InsurancePieChart
# Chunk 4: child age
childhealthdata <- childhealthdata %>% rename(Age = Child.Age)
ageplot <- ggplot(childhealthdata) +
aes(x = Age, text = paste0("Age: ", x, "<br> Children: ", ..count..)) +
geom_histogram(bins = 35L, fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
ggplotly(ageplot, tooltip = "text")
# Chunk 5: poverty level chart
povplot <- ggplot(childhealthdata) +
aes(x = povlevel, text = paste0("Children: ", ..count.., "<br> Poverty Level: ", x)) +
geom_bar(fill = "#440154") +
labs(
x = "Relation to Federal Poverty Level",
y = "Number of Children",
title = "Poverty Level of Children Sampled") +
theme_minimal()
ggplotly(povplot, tooltip = "text")
# Chunk 6: value box uninsured
valueBox("6%", caption = "Percent Uninsured", icon = NULL, color = "#21918c", href = NULL)
# Chunk 7: value box poverty
valueBox("28%", caption = "Percent in Poverty", icon = NULL, color = "#21918c", href = NULL)
# Chunk 8: value box treatment
valueBox("3%", caption = "Percent Who Need Treatment & Did Not Receive It", icon = NULL, color = "#21918c", href = NULL)
# Chunk 9: reasons care not received
numineligible <- childhealthdata %>% filter(ineligible_1920 == 1) %>% count()
numunavailable <- childhealthdata %>% filter(unavailable_1920 == 1) %>% count()
numnoappt <- childhealthdata %>% filter(appointment_1920 == 1) %>% count()
numntransport <- childhealthdata %>% filter(transport_1920 == 1) %>% count()
numNotOpen <- childhealthdata %>% filter(NotOpen_1920 == 1) %>% count()
numCostIssue <- childhealthdata %>% filter(CostIssue_1920 == 1) %>% count()
Reason <- c("Not Eligible", "Unavailable in Area", "Couldn't Get Appointment", "Transportation or Childcare Issues", "Office Wasn't Open", "Cost")
reasonscount <- c(518, 602, 1129, 230, 596, 1118)
reasonsnocaredata <- data.frame(Reason, reasonscount)
reasonsnocareplot <- ggplot(reasonsnocaredata) +
aes(x = Reason, y = reasonscount, text = paste0("Children: ", reasonscount, "<br> Reason: ", Reason)) +
geom_bar(stat = "identity", fill = "#440154") +
labs(
x = "",
y = "Number of Children",
title = "Reasons for Missing Needed Care") +
coord_flip() +
theme_minimal()
ggplotly(reasonsnocareplot, tooltip = "text")
# Chunk 10: insurance and poverty
#plot showing over 50% of poor are uninsured
insurancepovchart <- childhealthdata %>%
filter(!(InsGap_1920 %in% "Unknown")) %>%
ggplot() +
aes(x = InsGap_1920, fill = povlevelgrouped, text = paste("Children: ", ..count.., "<br> Poverty Level: ", fill)) +
geom_bar(position = "fill") +
scale_fill_viridis_d(option = "viridis",
direction = 1) +
scale_y_continuous(labels = scales::percent) +
labs(x = "", y = "Percentage", title = "Insurance Status and Poverty Level in US",
caption = "Based on National Survey of Children's Health, 2019-2020", fill = "Poverty Level") +
coord_flip() +
theme_minimal()
ggplotly(insurancepovchart, tooltip = "text")
# Chunk 11: care insurance
#insured status by received care
CareInsChart <- childhealthdata %>%
filter(!(InsGap_1920 %in% "Unknown")) %>%
filter(!(ForegoneCare %in% "Unknown")) %>%
ggplot() +
aes(x = ForegoneCare, fill = InsGap_1920, text = paste("Children: ", ..count.., "<br> Insurance Status: ", fill)) +
geom_bar(position = "fill") +
scale_fill_viridis_d(option = "viridis", direction = 1) +
scale_y_continuous(labels = scales::percent) +
labs(x = "",
y = "Proportion of Children", title = "Children Receiving Necessary Care by Insurance Status", caption = "Based on National Survey of Children's Health, 2019-2020",
fill = "Insured Status") +
coord_flip() +
theme_minimal()
ggplotly(CareInsChart, tooltip = "text")
# Chunk 12: care by poverty
CarePovChart <- childhealthdata %>%
filter(!(ForegoneCare %in% "Unknown")) %>%
ggplot() +
aes(x = ForegoneCare, fill = povlevelgrouped, text = paste("Children: ", ..count.., "<br> Poverty Level: ", fill)) +
geom_bar(position = "fill") +
scale_fill_viridis_d(option = "viridis",
direction = 1) +
scale_y_continuous(labels = scales::percent) +
labs(x = "", y = "Proportion of Children", title = "Children Who Did Not Receive Needed Care by Poverty Level",
caption = "Based on National Survey of Children's Health, 2019-2020", fill = "Poverty Level") +
coord_flip() +
theme_minimal()
ggplotly(CarePovChart, tooltip = "text")
# Chunk 13: care by race
CareRaceChart <- childhealthdata %>%
filter(!(ForegoneCare %in% "Unknown")) %>%
filter(!(RaceCat %in% "Unknown")) %>%
ggplot() +
aes(x = RaceCat, fill = ForegoneCare, text = paste("Children: ", ..count.., "<br> Care: ", fill)) +
geom_bar(position = "fill") +
scale_fill_viridis_d(option = "viridis",
direction = 1) +
scale_y_continuous(labels = scales::percent) +
labs(x = "", y = "Proportion of Children", title = "Children Who Did Not Receive Needed Care by Race",
caption = "Based on National Survey of Children's Health, 2019-2020", fill = "Accessing Care") +
coord_flip() +
theme_minimal()
ggplotly(CareRaceChart, tooltip = "text")
# Chunk 14: ACEs and Race
ACEandRACE <- childhealthdata %>%
filter(!(RaceCat %in% "Unknown")) %>%
filter(!(ACEs %in% "Missing")) %>%
ggplot() +
aes(x = RaceCat, fill = ACEs, text = paste("Children:", ..count..)) +
geom_bar(position = "fill") +
coord_flip() +
scale_fill_viridis_d(option = "viridis",
direction = 1) +
scale_y_continuous(labels = scales::percent) +
theme_minimal()
ggplotly(ACEandRACE, tooltip = c("text", "ACEs")) %>% layout(title = "Adverse Childhood Experiences (ACE) by Race in the US", font=list(size = 10), xaxis = list(title = 'Proportion of Children', size = 9), yaxis = list(title = 'Race', size = 9), legend = list(title = 'Number of ACEs', size = 9))
# Chunk 15: ACE and Flourish
FlrshAcePlot <- childhealthdata %>%
ggplot() +
aes(x = FlourishStatus6to17, fill = ACEs, text = paste("Children:", ..count..)) +
geom_bar(stat="count", position = "fill") +
coord_flip() +
scale_fill_viridis_d(option = "viridis",
direction = 1) +
scale_y_continuous(labels = scales::percent) +
labs(x = "Flourishing Items Met", y = "Proportion of Children", fill = "Number of ACEs") +
theme_minimal()
ggplotly(FlrshAcePlot, tooltip = c("text", "ACEs")) %>% layout(title = "Flourishing Status & Adverse Childhood Experiences (ACE)", font=list(size = 10), xaxis = list(title = 'Proportion of Children', size = 9), yaxis = list(title = 'Flourishing Items', size = 9), legend = list(title = 'Number of ACEs', size = 9))
ggplot(RaceCount, aes(area = children, fill = RaceCat, label = RaceCat)) +
geom_treemap(show.legend = FALSE) +
scale_fill_viridis_d(option = "viridis",
direction = 1) +
geom_treemap_text(fontface = "italic", colour = "white", place = "centre", min.size = 2, grow = TRUE)
ggplot(RaceCount, aes(area = children, fill = RaceCat, label = RaceCat)) +
geom_treemap(show.legend = FALSE) +
scale_fill_viridis_d(option = "viridis",
direction = 1) +
geom_treemap_text(fontface = "italic", colour = "grey", place = "centre", min.size = 2, grow = TRUE)
ggplot(childhealthdata) +
aes(x = Age, text = paste0("Age: ", x, "<br> Children: ", ..count..)) +
geom_histogram(bins = 18L, fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
rmarkdown::run("FinalProj_FlexDashboard.Rmd", shiny_args = list(port = 3838, host = "0.0.0.0"))
ageplot <- ggplot(childhealthdata) +
aes(x = round(Age, digits = 0), text = paste0("Age: ", x, "<br> Children: ", ..count..)) +
geom_histogram(bins = 18L, fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
ggplotly(ageplot, tooltip = "text")
ageplot <- ggplot(childhealthdata) +
aes(x = round(Age, digits = 0), text = paste0("Age: ", x, "<br> Children: ", ..count..)) +
geom_histogram(bins = 17, fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
ggplotly(ageplot, tooltip = "text")
ageplot <- ggplot(childhealthdata) +
aes(x = round(Age, digits = 0), text = paste0("Age: ", x, "<br> Children: ", ..count..)) +
geom_histogram(bins = 17, fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
ggplotly(ageplot, tooltip = "text")
ageplot <- ggplot(childhealthdata) +
aes(x = Age, text = paste0("Age: ", round(x), "<br> Children: ", ..count..)) +
geom_histogram(bins = 17, fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
ggplotly(ageplot, tooltip = "text")
ggplot(childhealthdata) +
aes(x = Age, text = paste0("Age: ", round(x), "<br>Children: ", ..count..)) +
geom_bar(stat = "count", fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
ggplot(childhealthdata) +
aes(x = Age, text = paste0("Age: ", round(x), "<br>Children: ", ..count..)) +
geom_bar(fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
install.packages("apyramid")
View(childhealthdata)
apyramid::age_pyramid(data = childhealthdata,
age_group = "Age",
split_by = "Child.Sex")
childhealthdata <- childhealthdata %>% mutate(Age1 = recode_factor(Age))
convertest <- as_factor(childhealthdata$Age)
frq(convertest)
rm(convertest)
childhealthdata <- as_factor(childhealthdata$Age)
ggplot(childhealthdata) +
aes(x = Age, text = paste0("Age: ", round(x), "<br>Children: ", ..count..)) +
geom_bar(stat = "count", fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
ggplot(childhealthdata) +
aes(x = Age, text = paste0("Age: ", x, "<br>Children: ", ..count..)) +
geom_bar(fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
ggplot(childhealthdata) +
aes(x = Age, text = paste0("Children: ", ..count.., "<br> Poverty Level: ", x)) +
geom_bar(fill = "#440154") +
labs(
x = "Relation to Federal Poverty Level",
y = "Number of Children",
title = "Poverty Level of Children Sampled") +
theme_minimal()
childhealthdata <- read_csv("FinalDataforSubmission.csv")
childhealthdata$age <- as_factor(childhealthdata$Age)
View(childhealthdata)
childhealthdata$Child.Age <- as_factor(childhealthdata$Child.Age)
childhealthdata <- childhealthdata %>% rename(Age = Child.Age)
ggplot(childhealthdata) +
aes(x = Age, text = paste0("Age: ", x, "<br>Children: ", ..count..)) +
geom_bar(fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
is.factor(Age)
childhealthdata %>% is.factor(Age)
View(childhealthdata)
TEST <- childhealthdata %>% factor(Age)
TEST <- factor(childhealthdata$Age)
view(TEST)
ggplot(TEST) +
aes(x = Age, text = paste0("Age: ", x, "<br>Children: ", ..count..)) +
geom_bar(fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
View(childhealthdata)
rm(TEST)
View(childhealthdata)
childhealthdata <- read_csv("FinalDataforSubmission.csv")
View(childhealthdata)
childhealthdata <- childhealthdata %>% mutate(Age = recode_factor(Child.Age,
"0" = "0",
"1" = "1",
"2" = "2",
"3" = "3",
"4" = "4",
"5" = "5",
"6" = "6",
"7" = "7",
"8" = "8",
"9" = "9",
"10" = "10",
"11" = "11",
"12" = "12",
"13" = "13",
"14" = "14",
"15" = "15",
"16" = "16",
"17" = "17",
"99" = "Unknown",
.ordered = TRUE,
.default = "Unknown"))
ggplot(childhealthdata) +
aes(x = Age, text = paste0("Age: ", x, "<br>Children: ", ..count..)) +
geom_bar(fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
View(childhealthdata)
ggplot(childhealthdata) +
aes(x = povlevel, text = paste0("Children: ", ..count.., "<br> Poverty Level: ", x)) +
geom_bar(fill = "#440154") +
labs(
x = "Relation to Federal Poverty Level",
y = "Number of Children",
title = "Poverty Level of Children Sampled") +
theme_minimal()
library(apyramid)
remove.packages("apyramid", lib="~/R/win-library/4.1")
Error in isIncomplete(con) : invalid connection
ggplot(childhealthdata) +
aes(x = povlevel, text = paste0("Children: ", ..count.., "<br> Poverty Level: ", x)) +
geom_bar(fill = "#440154") +
labs(
x = "Relation to Federal Poverty Level",
y = "Number of Children",
title = "Poverty Level of Children Sampled") +
theme_minimal()
ggplot(childhealthdata) +
aes(x = povlevel, text = paste0("Children: ", ..count.., "<br> Poverty Level: ", x)) +
geom_bar(fill = "#440154") +
labs(
x = "Relation to Federal Poverty Level",
y = "Number of Children",
title = "Poverty Level of Children Sampled") +
theme_minimal()
library(flexdashboard)
library(tidyverse)
library(dplyr)
library(ggplot2)
library(plotly)
library(shiny)
library(waffle)
library(rsconnect)
library(scales)
library(packcircles)
library(treemapify)
# read in data
childhealthdata <- read_csv("FinalDataforSubmission.csv")
#adding filtered variables
MissedNeededCare <- childhealthdata %>%
filter(ForegoneCare == "Yes")
uninsured <- childhealthdata %>%
filter(InsGap_1920 == "Periods Uninsured")
childhealthdata <- childhealthdata %>% mutate(ACEs = recode_factor(ACEct_1920,
"0" = "0",
"1" = "1",
"2" = "2",
"3" = "3",
"4" = "4",
"5" = "5",
"6" = "6",
"7" = "7",
"8" = "8",
"9" = "9",
"10" = "10",
"99" = "Missing",
.ordered = TRUE,
.default = "Unknown"))
childhealthdata <- childhealthdata %>% mutate(povlevel = recode_factor(povlev4_1920,
"1" = "Below 100% FPL",
"2" = "100-199% FPL",
"3" = "200-399% FPL",
"4" = "Greater than 400% FPL",
.ordered = TRUE,
.default = "Unknown"))
childhealthdata <- childhealthdata %>% mutate(RaceCat = recode_factor(Race,
"1" = "Hispanic",
"2" = "White",
"4" = "Asian",
"3" = "Black",
"5" = "Other",
"99" = "Unknown",
.ordered = TRUE,
.default = "Unknown"))
childhealthdata <- childhealthdata %>% filter(!(FlourishStatus6to17 %in% "Unknown")) %>%
filter(!(FlourishStatus6to17 %in% "NA, Under 5")) %>%
filter(!(ACEs %in% "Missing")) %>%
filter(!(ACEs %in% "Unknown"))
childhealthdata <- childhealthdata %>% rename(Age = Child.Age)
ggplot(childhealthdata) +
aes(x = Age, text = paste0("Age: ", x, "<br> Children: ", ..count..)) +
geom_histogram(bins = 18L, fill = "#21918c") +
labs(
x = "Age of Child",
y = "Number of Children",
title = "Age Distribution of Children",
) +
coord_flip() +
theme_minimal()
getwd()
